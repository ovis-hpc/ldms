# run many daemons under slurm. assumes exclusive use of nodes.
# use of fabric or rdma plugins will require allowroot=1 in the environment.
# control of network selection is in sbatch.cluster.
# export LDMSNET=[sock,fabric,sockfabric,rdma] to control network selection
# before launching pll-ldms-static-test.sh.
portbase=59000
ulimit -n 100000
MESSAGE starting l1, l2 aggs and collectors
VGARGS="--tool=drd --time-stamp=yes --gen-suppressions=all --track-origins=yes"
VGARGS="--track-origins=yes --leak-check=full --show-leak-kinds=definite --time-stamp=yes --gen-suppressions=all  --main-stacksize=256000000"
if test -f $pkglibdir/ldms.supp; then
	VGARGS="$VGARGS --suppressions=$pkglibdir/ldms.supp"
fi
# start collector(s)
if test "x$maxdaemon" = "x"; then
	maxdaemon=3
fi
DAEMONS `seq 1 $maxdaemon`
LDMSD_EXTRA="-m 20k"
VGTAG=.samp
# start n-2 sampler daemons
LDMSD -s 1000000 -c `seq 3 $maxdaemon`
# scale m to handle maxdaemon
# -m > 450 or so seems to be incompatible with arm/valgrind 3.13
LDMSD_EXTRA="-m 64M"
#vgon
VGTAG=.L2
# start L2 on daemon 1
LDMSD 1
vgoff
#vgon
VGTAG=.L1
# start L1 on daemon 2, with sampler daemons 3..maxdaemon
LDMSD -s 3000000 -P pll.producer,`seq -s, 3 $maxdaemon` 2
vgoff
SLEEP 1
FILECNT_LDMSD 2 1 3
#vgon
LDMS_LS 1
vgoff
# stop all samplers and restart a few cycles
KILL_LDMSD `seq 3 $maxdaemon`
SLEEP 2
FILECNT_LDMSD 2 1 3
LDMSD -s 100000 -c `seq 3 $maxdaemon`
SLEEP 10
FILECNT_LDMSD 2 1 3
KILL_LDMSD `seq 3 $maxdaemon`
SLEEP 2
LDMSD -s 100000 -c `seq 3 $maxdaemon`
SLEEP 10
FILECNT_LDMSD 2 1 3
KILL_LDMSD `seq 3 $maxdaemon`
SLEEP 2
LDMSD -s 100000 -c `seq 3 $maxdaemon`
SLEEP 10
FILECNT_LDMSD 2 1 3
KILL_LDMSD `seq 3 $maxdaemon`
SLEEP 2
LDMSD -s 100000 -c `seq 3 $maxdaemon`
SLEEP 10
FILECNT_LDMSD 2 1 3
KILL_LDMSD `seq 3 $maxdaemon`
SLEEP 2
LDMSD -s 100000 -c `seq 3 $maxdaemon`
SLEEP 10
FILECNT_LDMSD 2 1 3
KILL_LDMSD `seq 3 $maxdaemon`
SLEEP 2
LDMSD -s 100000 -c `seq 3 $maxdaemon`
SLEEP 10
FILECNT_LDMSD 2 1 3
KILL_LDMSD `seq 3 $maxdaemon`
SLEEP 2
LDMSD -s 100000 -c `seq 3 $maxdaemon`
SLEEP 10
FILECNT_LDMSD 2 1 3
KILL_LDMSD `seq 3 $maxdaemon`
SLEEP 2
LDMSD -s 100000 -c `seq 3 $maxdaemon`
SLEEP 10
FILECNT_LDMSD 2 1 3
KILL_LDMSD `seq 3 $maxdaemon`
SLEEP 2
LDMSD -s 100000 -c `seq 3 $maxdaemon`
SLEEP 10
FILECNT_LDMSD 2 1 3
KILL_LDMSD `seq 3 $maxdaemon`
SLEEP 2
LDMSD -s 100000 -c `seq 3 $maxdaemon`
SLEEP 10
FILECNT_LDMSD 2 1 3
KILL_LDMSD `seq 3 $maxdaemon`
SLEEP 2
LDMSD -s 100000 -c `seq 3 $maxdaemon`
SLEEP 10
FILECNT_LDMSD 2 1 3
KILL_LDMSD `seq 3 $maxdaemon`
SLEEP 2
LDMSD -s 100000 -c `seq 3 $maxdaemon`
SLEEP 10
FILECNT_LDMSD 2 1 3
KILL_LDMSD `seq 3 $maxdaemon`
SLEEP 2
LDMSD -s 100000 -c `seq 3 $maxdaemon`
SLEEP 10
FILECNT_LDMSD 2 1 3
KILL_LDMSD `seq 3 $maxdaemon`
SLEEP 2
LDMSD -s 100000 -c `seq 3 $maxdaemon`
SLEEP 10
FILECNT_LDMSD 2 1 3
#vgon
LDMS_LS 2
#vgoff
SLEEP $(( $(SEC_LEFT) - 20))
# kill l2
KILL_LDMSD 1
SLEEP 1
# kill l1, samps
KILL_LDMSD `seq 3 $maxdaemon` 2
SLEEP 1
MESSAGE logs and data under ${TESTDIR}
# chown -R baallan.baallan $TESTDIR
